<UserControl x:Class="VMSales.Views.ProductView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:models="clr-namespace:VMSales.ViewModels" xmlns:Controls="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
             d:DataContext="{d:DesignInstance Type=models:ProductViewModel}"
             mc:Ignorable="d" 
             Height="800" Width="1920" MinHeight="400" MinWidth="800">

    <UserControl.Resources>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">

        <Grid Margin="10" DockPanel.Dock="Top" Background="Azure">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="25" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>

            <!-- Supplier -->
            <Label Grid.Row="2" Grid.Column="0">Supplier</Label>
            <!--<ComboBox x:Name="supplierName" IsEditable="False" Background="WhiteSmoke"  
                ItemsSource="{Binding PurchaseOrder}"
                SelectedValue="{Binding supplier_name}"
                Width="200" Grid.Column="1" Grid.Row="2" />
                <Label Content="Supplier Name" Grid.Column="0" Grid.Row="2"/>
    -->
            <ComboBox x:Name="supplier" IsEditable="False" Background="WhiteSmoke" 
               IsSynchronizedWithCurrentItem="True"
               ItemsSource="{Binding BindableCollectionSupplierModel}" 
               DisplayMemberPath="supplier_name"
               SelectedValue="{Binding selected_supplier_name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
               SelectedValuePath="supplier_name"
               Grid.Row="2" Grid.Column="1"/>

            <!--      SelectedValuePath="{Binding selected_supplier_name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
               SelectedValue="selected_supplier_name"
            -->

            <!-- Lot Number -->
            <Label Content="Lot Number" Grid.Column="0" Grid.Row="3"/>
            <ComboBox x:Name="Selected_lot_number" IsEditable="False" Background="WhiteSmoke"  
                ItemsSource="{Binding Path=BindableCollectionPurchaseOrderModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                DisplayMemberPath="lot_number"
                Width="60" HorizontalAlignment="Left"
                SelectedValue="{Binding lot_number, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                SelectedValuePath="purchase_order_detail_pk"
                Grid.Column="1" Grid.Row="3"/>
            <!--SelectedItem="selected_lot_number"-->
            <!--         SelectedValue="{Binding purchase_order_detail_pk, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                SelectedValuePath="purchase_order_detail_pk" -->

            <!-- Lot Name -->
            <Label Content="Lot Name" Grid.Column="0" Grid.Row="5" />
            <TextBox Name="lot_name" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_name, ElementName=Selected_lot_number}"
            Grid.Column="1" Grid.Row="5"/>

            <!-- Lot Description -->
            <!--           <Label Content="Lot Description" Grid.Column="0" Grid.Row="6" />
            <TextBox Name="lot_description" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_description, ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="6" /> -->
            <!-- Lot Quantity -->
            <Label Content="Lot Quantity" Grid.Column="0" Grid.Row="7" />
            <TextBox Name="lot_quantity" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_quantity, ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="7"/>
            <!-- Lot Cost -->
            <Label Content="Lot Cost" Grid.Column="0" Grid.Row="8" />
            <TextBox Name="lot_cost" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_cost, StringFormat='c', ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="8"/>
            <!-- Lot Sales Tax -->
            <Label Content="Lot Sales Tax" Grid.Column="0" Grid.Row="9" />
            <TextBox Name="lot_salestax" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.sales_tax, StringFormat='c',ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="9"/>
            <!-- Lot Shipping -->
            <Label Content="Lot Shipping" Grid.Column="0" Grid.Row="10" />
            <TextBox Name="lot_shipping" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.shipping_cost, StringFormat='c',ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="10"/>

            <!-- Filter Category -->

            <TextBlock Grid.Row="2" Grid.Column="6" FontSize="14" HorizontalAlignment="Center" FontWeight="Bold">Filter Category</TextBlock>
            <ComboBox IsEditable="False" Background="White" Grid.Row="3" Grid.Column="6" 
                ItemsSource="{Binding BindableCollectionCategoryModel}" 
                DisplayMemberPath="category_name"
                SelectedItem="{Binding selected_category_name_filter, 
                UpdateSourceTrigger=PropertyChanged}" 
                Width="100" HorizontalAlignment="Left" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="1.333,0.222,0,25.333"/>

            <Button x:Name="RemoveCategoryFilterCommand" HorizontalAlignment="Left" Margin="20,0,0,0" Grid.Row="3" Grid.Column="7" Width="16" Height="16" 
            IsEnabled="{Binding canRemoveCategoryFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
            </Button>

            <!-- Filter Supplier -->

            <TextBlock Grid.Row="2" Grid.Column="4" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" Grid.RowSpan="2">Filter Supplier</TextBlock>
            <ComboBox IsEditable="False" Background="White" Grid.Row="3" Grid.Column="4" 
                ItemsSource="{Binding BindableCollectionSupplierModel}"  
                DisplayMemberPath="supplier_name"
                SelectedItem="{Binding selected_supplier_name_filter, 
                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                Width="100" HorizontalAlignment="Left"/>

            <Button x:Name="RemoveSupplierFilterCommand" HorizontalAlignment="Left" Margin="20,0,0,0" Grid.Row="3" Grid.Column="5" Width="16" Height="16" 
            IsEnabled="{Binding canRemoveSupplierFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
            </Button>



            <Button x:Name="ProductSupplier" Grid.Column="2" Grid.Row="2"
                            Width="75" Height="20"
                            HorizontalAlignment="Center"
                            Content="Associate" IsEnabled="{Binding canEnableProductSupplier}">
            </Button>
            <Button x:Name="ProductPurchase" Grid.Column="2" Grid.Row="3"
                            Width="75" Height="20"
                            HorizontalAlignment="Center"
                            Content="Associate" IsEnabled="{Binding canEnableProductPurchase}">
            </Button>

            <!-- Images -->
            <Label Content="File List" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1" Grid.Column="8" Grid.ColumnSpan="2"/>

            <ListBox x:Name="FileList" ItemsSource="{Binding filelist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Selectedfilelist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="8" Grid.RowSpan="10" Grid.ColumnSpan="2"/>

  
            <Button x:Name="OpenImageCommand" Grid.Row="2" Grid.Column="10" Grid.RowSpan="10" Grid.ColumnSpan="2">
                <Image x:Name="imageControl" Margin="10,10,10,10" Source="{Binding Selectedfilelist}" />
            </Button>


            <!--       <CheckBox FlowDirection="RightToLeft" IsChecked="True" Grid.Column="4" Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock FlowDirection="RightToLeft" FontWeight="Bold" FontSize="14" Text="Show All Products" />
            </CheckBox>-->

            <!--  Save Button -->
            <Button x:Name="SaveCommand" cal:Message.Attach="SaveCommand" Grid.Column="0" Grid.Row="12"
                            Width="75"
                            Content="Save"
                            HorizontalAlignment="Left"/>
            <!--  Add Button -->
            <Button x:Name="AddCommand" Grid.Column="1" Grid.Row="12"
                            Width="75"                                      
                            HorizontalAlignment="Left"
                            Content="Add"/>
            <!-- Delete Button -->
            <Button x:Name="DeleteCommand" Grid.Column="1" Grid.Row="12"             
                            Width="75"        
                            Content="Delete" Height="19" Margin="90,0,20,0" VerticalAlignment="Top"/>
            <!-- Reset Button -->
            <Button x:Name="ResetCommand" Grid.Column="2" Grid.Row="12"
                            Width="75" 
                            HorizontalAlignment="Left"
                            Content="Reset"/>
            <!-- Upload Photo Button -->
            <Button x:Name="UploadImageCommand" Grid.Column="8" Grid.Row="12"
             IsEnabled="{Binding productSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"               
          
                    Width="75" 
                            HorizontalAlignment="Left"
                            Content="Upload"/>
            <!-- Delete Photo Button -->
            <Button x:Name="DeleteImageCommand" Grid.Column="9" Grid.Row="12"
             IsEnabled="{Binding productSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"               
          
                    Width="75" 
                            HorizontalAlignment="Left"
                            Content="Delete"/>


        </Grid>

        <!-- Product DataGrid Start -->


        <!--SelectedItem="{Binding Select_Request, Mode=TwoWay}"-->
        <!-- Product DataGrid Start -->
        <DataGrid AutoGenerateColumns="False" 
                          ItemsSource="{Binding BindableCollectionProductModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          CanUserReorderColumns="False"
                          SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          EnableRowVirtualization="True" IsReadOnly="False" Grid.Row="10" 
                          Height="Auto" Width="1920"
                          SelectionMode="Single">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="IsSelected"  Value="{Binding IsSelected, Mode=TwoWay}"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>

                <!-- Category Combobox -->

                <DataGridTemplateColumn Header="Category" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <ComboBox ItemsSource="{Binding DataContext.category_list,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Controls:DataGrid}}" 
                            SelectedItem="{Binding category_name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

<!-- for debug only -->
                <DataGridTextColumn Header="Product PK" Width="140" Binding="{Binding product_pk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>



                <!--Product Name -->
                <DataGridTextColumn Header="Product Name" Width="140" Binding="{Binding product_name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Product Description -->
                <DataGridTextColumn Header="Description" Width="312" Binding="{Binding description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- SKU-->
                <DataGridTextColumn Header="SKU" Width="100" Binding="{Binding sku, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Brand Name-->
                <DataGridTextColumn Header="Brand Name" Width="90" Binding="{Binding brand_name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Condition -->
                <DataGridTemplateColumn Header="Condition" Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding conditionlist}" SelectedValue="{Binding condition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Quantity -->
                <DataGridTemplateColumn Header="Qty" Width="50">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="NumericInput"/>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Cost -->
                <DataGridTextColumn Header="Cost" Width="70" Binding="{Binding cost, StringFormat='c', ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Listed Price -->
                <DataGridTextColumn Header="Listed Price" Width="70" Binding="{Binding listed_price, StringFormat='c', ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Stock -->
                <DataGridTemplateColumn Header="In Stock" Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding instock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Listing Number -->
                <DataGridTextColumn Header="Listing Number" Width="120" Binding="{Binding listing_number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Listing URL-->
                <DataGridTextColumn Header="Listing Url" Width="200" Binding="{Binding listing_url, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Listing Date -->

                <DataGridTemplateColumn Header="Listing Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding listing_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding listing_date}" Value="1/1/0001">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding listing_date, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>