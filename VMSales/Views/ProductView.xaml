<UserControl x:Class="VMSales.Views.ProductView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VMSales.ViewModels"         
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:models="clr-namespace:VMSales.ViewModels" 
             d:DataContext="{d:DesignInstance Type=models:ProductViewModel}"
             mc:Ignorable="d" 
             Height="800" Width="1400" VerticalAlignment="Top" MinHeight="400" MinWidth="800">
    <!--  <UserControl.DataContext>
        <local:ProductViewModel/>
    </UserControl.DataContext>-->

    <UserControl.Resources>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <Grid Margin="10" DockPanel.Dock="Top" Background="Azure">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="25" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>

            <!-- Supplier -->
            <!--      <Label Grid.Row="2" Grid.Column="0">Supplier</Label>
            <ComboBox x:Name="supplierName" IsEditable="False" Background="WhiteSmoke"  
                ItemsSource="{Binding PurchaseOrder}"
                SelectedValue="{Binding supplier_name}"
                Width="200" Grid.Column="1" Grid.Row="2" />-->
            <Label Content="Supplier Name" Grid.Column="0" Grid.Row="2"/>
            <ComboBox x:Name="supplier" ItemsSource="{Binding Path=ObservableCollectionSupplierModel}" DisplayMemberPath="supplier_name" SelectedValue="{Binding supplier_fk, Mode=TwoWay}" SelectedValuePath="supplier_pk" Grid.Row="2" Grid.Column="1"/>
            <!-- Lot Number -->
            <Label Content="Lot Number" Grid.Column="0" Grid.Row="3"/>
            <ComboBox x:Name="Selected_lot_number" IsEditable="False" Background="WhiteSmoke"  
                ItemsSource="{Binding Path=ObservableCollectionPurchaseOrderModel}"
                DisplayMemberPath="lot_number"
                SelectedValue="{Binding lot_number}"
                SelectedValuePath="{Binding lot_number}"
                Height="25" Width="60" HorizontalAlignment="Left"      
                Grid.Column="1" Grid.Row="3"/>
            
            

            <!-- Lot Name -->
            <Label Content="Lot Name" Grid.Column="0" Grid.Row="5" />
            <TextBox Name="lot_name" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_name, ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="5"/>
            <!-- Lot Description -->
            <Label Content="Lot Description" Grid.Column="0" Grid.Row="6" />
            <TextBox Name="lot_description" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_description, ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="6" />
            <!-- Lot Quantity -->
            <Label Content="Lot Quantity" Grid.Column="0" Grid.Row="7" />
            <TextBox Name="lot_quantity" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_quantity, ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="7"/>
            <!-- Lot Cost -->
            <Label Content="Lot Cost" Grid.Column="0" Grid.Row="8" />
            <TextBox Name="lot_cost" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.lot_cost, StringFormat='c', ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="8"/>
            <!-- Lot Sales Tax -->
            <Label Content="Lot Sales Tax" Grid.Column="0" Grid.Row="9" />
            <TextBox Name="lot_salestax" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.sales_tax, StringFormat='c',ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="9"/>
            <!-- Lot Shipping -->
            <Label Content="Lot Shipping" Grid.Column="0" Grid.Row="10" />
            <TextBox Name="lot_shipping" IsReadOnly="True" Background="WhiteSmoke" Text="{Binding SelectedItem.shipping_cost, StringFormat='c',ElementName=Selected_lot_number}"
                        Grid.Column="1" Grid.Row="10"/>

            <!-- Filter Category -->

            <TextBlock Grid.Row="2" Grid.Column="4" FontSize="14" HorizontalAlignment="Center" FontWeight="Bold">Category</TextBlock>
            <ComboBox IsEditable="False" Background="White" Grid.Row="3" Grid.Column="4" 
                ItemsSource="{Binding categoryNameFilter}" 
                SelectedItem="{Binding selectedCategoryName, 
                UpdateSourceTrigger=PropertyChanged}" 
                Width="100" HorizontalAlignment="Left" Margin="0.333,2.333,0,23.667" Grid.RowSpan="2"/>

            <Button x:Name="RemoveInvoiceNumberFilterCommand" HorizontalAlignment="Left" Margin="20,0,0,0" Grid.Row="3" Grid.Column="5" Width="16" Height="16" 
            IsEnabled="{Binding canRemoveCategoryFilter, Mode=OneWay}">
                <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
            </Button>

            <!-- Filter Supplier -->

            <!--   <TextBlock Grid.Row="2" Grid.Column="4" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" Margin="23.222,2,23.222,19.889" Grid.RowSpan="2">Supplier</TextBlock>
            <ComboBox IsEditable="False" Background="White" Grid.Row="3" Grid.Column="4" 
                ItemsSource="{Binding supplierNameFilter}"  
                SelectedItem="{Binding selectedSupplierNameFilter, 
                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                Width="100" HorizontalAlignment="Left"/>-->

            <!--   <Button x:Name="RemovePurchaseDateFilterCommand" HorizontalAlignment="Left" Margin="20,0,0,0" Grid.Row="3" Grid.Column="5" Width="16" Height="16" 
            IsEnabled="{Binding canRemoveSupplierFilter, Mode=OneWay}">
                <Image Width="10" Height="10" Style="{DynamicResource ImageStyleForButtons}"/>
            </Button>-->

            <CheckBox FlowDirection="RightToLeft" IsChecked="True" Grid.Column="4" Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock FlowDirection="RightToLeft" FontWeight="Bold" FontSize="14" Text="Show All Products" />
            </CheckBox>

            <!--  Save Button -->
            <Button x:Name="SaveCommand" cal:Message.Attach="SaveCommand" Grid.Column="0" Grid.Row="12"
                            Width="75"
                            Content="Save"
                            HorizontalAlignment="Left"/>
            <!--  Add Button -->
            <Button x:Name="AddCommand" Grid.Column="1" Grid.Row="12"
                            Width="75"                                      
                            HorizontalAlignment="Left"
                            Content="Add"/>
            <!-- Delete Button -->
            <Button x:Name="DeleteCommand" Grid.Column="1" Grid.Row="12"             
                            Width="75"        
                            Content="Delete" Height="19" Margin="90,0,20,0" VerticalAlignment="Top"/>
            <!-- Reset Button -->
            <Button x:Name="ResetCommand" Grid.Column="2" Grid.Row="12"
                            Width="75" 
                            HorizontalAlignment="Left"
                            Content="Reset"/>
        </Grid>

        <!-- Product DataGrid Start -->
        <DataGrid x:Name="ProductDataGrid"  AutoGenerateColumns="False" 
                          ItemsSource="{Binding ocProductView}"
                          IsSynchronizedWithCurrentItem="True"
                          CanUserReorderColumns="False"
                          CanUserAddRows="False"
                          EnableRowVirtualization="True" IsReadOnly="False" Grid.Row="10" 
                          Height="Auto" Width="1400">
            <DataGrid.Columns>
                <!-- Category DropDown -->
                <DataGridTemplateColumn Header="Category" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox Margin="2" ItemsSource="{Binding categoryName}" SelectedValue="{Binding selectedCategory, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Product Name -->
                <DataGridTextColumn Header="Product Name" Width="140" Binding="{Binding productName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Product Description -->
                <DataGridTextColumn Header="Description" Width="230" Binding="{Binding productDescription, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- SKU-->
                <DataGridTextColumn Header="SKU" Width="100" Binding="{Binding productSKU, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Brand Name-->
                <DataGridTextColumn Header="Brand Name" Width="90" Binding="{Binding productBrandName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Condition -->
                <DataGridTemplateColumn Header="Condition" Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding productCondition}" SelectedValue="{Binding selectedCondition, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Quantity -->
                <DataGridTemplateColumn Header="Qty" Width="50">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding productQuantity, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="NumericInput"/>
                            <!-- <TextBox Text="{Binding productQuanity, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/> -->

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Cost -->
                <DataGridTextColumn Header="Cost" Width="70" Binding="{Binding productCost, StringFormat='c', ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Sold Price -->
                <DataGridTextColumn Header="Sold Price" Width="70" Binding="{Binding productSoldPrice, StringFormat='c', ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Stock -->
                <DataGridTemplateColumn Header="In Stock" Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding productStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Listing Number -->
                <DataGridTextColumn Header="Listing Number" Width="120" Binding="{Binding productListingNumber}"  >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Listing URL-->
                <DataGridTextColumn Header="Listing Url" Width="100" Binding="{Binding productListingURL}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Listing Date -->

                <DataGridTemplateColumn Header="Listing Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding productListingDate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding productListingDate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
      
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>